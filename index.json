{
  "api/Anilibria.NET.Builders.html": {
    "href": "api/Anilibria.NET.Builders.html",
    "title": "Namespace Anilibria.NET.Builders | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Builders Classes SearchQueryBuilder Query builder class. Use it to search titles at SearchTitlesAsync(SearchQueryBuilder) . You get search by voiceover team, text, ganres, seasons and years"
  },
  "api/Anilibria.NET.Builders.SearchQueryBuilder.html": {
    "href": "api/Anilibria.NET.Builders.SearchQueryBuilder.html",
    "title": "Class SearchQueryBuilder | Anilibria.NET API",
    "keywords": "Class SearchQueryBuilder Query builder class. Use it to search titles at SearchTitlesAsync(SearchQueryBuilder) . You get search by voiceover team, text, ganres, seasons and years Inheritance System.Object SearchQueryBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Builders Assembly : Anilibria.NET.dll Syntax public class SearchQueryBuilder Constructors SearchQueryBuilder(Int32, Int32) Creating of seach builder Declaration public SearchQueryBuilder(int limit, int after) Parameters Type Name Description System.Int32 limit Limit of Titles in response System.Int32 after Response tiltes after that index Fields AfterIndex Search titels after this index Declaration public int AfterIndex Field Value Type Description System.Int32 LimitIndex Titels limit in query Declaration public int LimitIndex Field Value Type Description System.Int32 Methods SearchByDecors(String[]) Adds decors to search Declaration public void SearchByDecors(string[] decors) Parameters Type Name Description System.String [] decors Decors to search SearchByEditors(String[]) Adds editors to search Declaration public void SearchByEditors(string[] editors) Parameters Type Name Description System.String [] editors Editors to search SearchByGenres(String[]) Adds genres to search Declaration public void SearchByGenres(string[] genres) Parameters Type Name Description System.String [] genres Genres to search SearchBySeasons(Season[]) Adds seasons to search Declaration public void SearchBySeasons(Season[] seasons) Parameters Type Name Description Season [] seasons Seasons to search key SearchByText(String) Adds text to search Declaration public void SearchByText(string text) Parameters Type Name Description System.String text text to search key SearchByTimings(String[]) Adds timings to search Declaration public void SearchByTimings(string[] timings) Parameters Type Name Description System.String [] timings Timings to search SearchByTranslators(String[]) Adds translators to search Declaration public void SearchByTranslators(string[] translators) Parameters Type Name Description System.String [] translators Translators to search SearchByVoicers(String[]) Adds voicers to search Declaration public void SearchByVoicers(string[] voicers) Parameters Type Name Description System.String [] voicers Voicers to search keys SearchByYear(Int32) Adds year to search Declaration public void SearchByYear(int year) Parameters Type Name Description System.Int32 year Year to search key SearchByYear(Int32[]) Adds years to search Declaration public void SearchByYear(int[] years) Parameters Type Name Description System.Int32 [] years Years to search key"
  },
  "api/Anilibria.NET.Client.AnilibriaAPI.html": {
    "href": "api/Anilibria.NET.Client.AnilibriaAPI.html",
    "title": "Class AnilibriaAPI | Anilibria.NET API",
    "keywords": "Class AnilibriaAPI Static Anilibria client with out loggin system. Use this to get titles, youtube posts and feed from anilibria and other different things Inheritance System.Object AnilibriaAPI Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Client Assembly : Anilibria.NET.dll Syntax public static class AnilibriaAPI Methods GetAnimeYearsAsync() Returns all years of anime which anilibria translated Declaration public static Task<int[]> GetAnimeYearsAsync() Returns Type Description Task < System.Int32 []> Years list as System.Int32 GetCachingNodesAsync() Returns change nodes as System.String s Declaration public static Task<string[]> GetCachingNodesAsync() Returns Type Description Task < System.String []> Change nodes as System.String s GetFeedAsync(DateTime, Int32, Int32) Returns feed from anilibria.tv Declaration public static Task<Feed[]> GetFeedAsync(DateTime dateTime, int limit = 5, int after = 0) Parameters Type Name Description DateTime dateTime Feed after that date System.Int32 limit Limit of posts in response System.Int32 after Response posts after that index Returns Type Description Task < Feed []> GetGenresAsync(GenresSortingType) Returns all genres as System.String array Declaration public static Task<string[]> GetGenresAsync(GenresSortingType sortingType) Parameters Type Name Description GenresSortingType sortingType Sorting type, see more in GenresSortingType Returns Type Description Task < System.String []> genres as System.String array GetRandomTitleAsync() Returns random Title Declaration public static Task<Title> GetRandomTitleAsync() Returns Type Description Task < Title > Random Title GetTitleAsync(Int32) Returns title by id Declaration public static Task<Title> GetTitleAsync(int id) Parameters Type Name Description System.Int32 id Title ID Returns Type Description Task < Title > Title GetTitleAsync(String) Returns title by code Declaration public static Task<Title> GetTitleAsync(string code) Parameters Type Name Description System.String code Title code Returns Type Description Task < Title > Title GetTitlesAsync(Int32[]) Returns titles by ids Declaration public static Task<Title[]> GetTitlesAsync(int[] ids) Parameters Type Name Description System.Int32 [] ids Title ids Returns Type Description Task < Title []> Title GetTitlesAsync(String[]) Returns titles by codes Declaration public static Task<Title[]> GetTitlesAsync(string[] codes) Parameters Type Name Description System.String [] codes Title codes Returns Type Description Task < Title []> Title GetTitlesChangesAsync(DateTime, Int32) Returns changed titles Declaration public static Task<Title[]> GetTitlesChangesAsync(DateTime dateTime, int after = 0) Parameters Type Name Description DateTime dateTime Changes after date System.Int32 after Returns titles after this index Returns Type Description Task < Title []> changed Title GetTitlesScheduleAsync(Int32[]) Returns schedules of days from list Declaration public static Task<Schedule[]> GetTitlesScheduleAsync(int[] days) Parameters Type Name Description System.Int32 [] days List of days for which you want to see the schedule Returns Type Description Task < Schedule []> Schedule of days GetTitlesUpdatesAsync(Int32, Int32) Returns updated titles Declaration public static Task<Title[]> GetTitlesUpdatesAsync(int limit = 5, int after = 0) Parameters Type Name Description System.Int32 limit Titles limit in respose System.Int32 after Return title after this N Returns Type Description Task < Title []> updated Title s GetYouTubePostsAsync(DateTime, Int32, Int32) Returns youtube posts ( YouTubePost ) Declaration public static Task<YouTubePost[]> GetYouTubePostsAsync(DateTime dateTime, int limit = 5, int after = 0) Parameters Type Name Description DateTime dateTime Search youtube posts after that date System.Int32 limit Limit of posts in response System.Int32 after Response posts after that index Returns Type Description Task < YouTubePost []> YouTubePost s SearchTitlesAsync(SearchQueryBuilder) Search titles using SearchQueryBuilder Declaration public static Task<Title[]> SearchTitlesAsync(SearchQueryBuilder queryBuilder) Parameters Type Name Description SearchQueryBuilder queryBuilder Query builder for search Returns Type Description Task < Title []>"
  },
  "api/Anilibria.NET.Client.AnilibriaClient.html": {
    "href": "api/Anilibria.NET.Client.AnilibriaClient.html",
    "title": "Class AnilibriaClient | Anilibria.NET API",
    "keywords": "Class AnilibriaClient AnilibriaAPI client (User) Inheritance System.Object AnilibriaClient Namespace : Anilibria.NET.Client Assembly : Anilibria.NET.dll Syntax public class AnilibriaClient : IDisposable Constructors AnilibriaClient(String, String) Creation of AnilibriaAPI client Declaration public AnilibriaClient(string login, string password) Parameters Type Name Description System.String login User login (user name or email) System.String password Password password Properties LoggedIn Is user loggined Declaration public bool LoggedIn { get; } Property Value Type Description System.Boolean Token User token Declaration public string Token { get; } Property Value Type Description System.String Methods AddFavoriteAsync(Title) Adding title in favorites Declaration public async Task AddFavoriteAsync(Title title) Parameters Type Name Description Title title Title which will be added into the Favorite Returns Type Description Task DeleteFavoriteAsync(Title) Deleting title from favorites Declaration public async Task DeleteFavoriteAsync(Title title) Parameters Type Name Description Title title Title to delete Returns Type Description Task Dispose() Disposing of anilibria client Declaration public void Dispose() GetFavoriteTitles() Returns list of favorite titles of user Declaration public async Task<Title[]> GetFavoriteTitles() Returns Type Description Task < Title []> List of favorite titles of user LoginAsync() Async loging in anilibria.tv Declaration public async Task LoginAsync() Returns Type Description Task Exceptions Type Condition AnilibriaInvalidUserException Invalid user login or password LogoutAsync() Async loging outing anilibria.tv Declaration public async Task LogoutAsync() Returns Type Description Task"
  },
  "api/Anilibria.NET.Client.AnilibriaInvalidUserException.html": {
    "href": "api/Anilibria.NET.Client.AnilibriaInvalidUserException.html",
    "title": "Class AnilibriaInvalidUserException | Anilibria.NET API",
    "keywords": "Class AnilibriaInvalidUserException Exception thrown on invalid login in anilibria.tv Inheritance System.Object AnilibriaInvalidUserException Namespace : Anilibria.NET.Client Assembly : Anilibria.NET.dll Syntax public class AnilibriaInvalidUserException : Exception Properties Login Login of user Declaration public string Login { get; } Property Value Type Description System.String Password Password of user Declaration public string Password { get; } Property Value Type Description System.String Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Exception message"
  },
  "api/Anilibria.NET.Client.html": {
    "href": "api/Anilibria.NET.Client.html",
    "title": "Namespace Anilibria.NET.Client | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Client Classes AnilibriaAPI Static Anilibria client with out loggin system. Use this to get titles, youtube posts and feed from anilibria and other different things AnilibriaClient AnilibriaAPI client (User) AnilibriaInvalidUserException Exception thrown on invalid login in anilibria.tv"
  },
  "api/Anilibria.NET.Helpers.LogSystem.html": {
    "href": "api/Anilibria.NET.Helpers.LogSystem.html",
    "title": "Namespace Anilibria.NET.Helpers.LogSystem | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Helpers.LogSystem Classes LogEventArgs Event data class with Log data Logger Static class that is used to log what is happening in the library Enums LogReasonContext Type of reason why the log created LogType Type of log Delegates Logger.LogEventHandler Event Handler for logs"
  },
  "api/Anilibria.NET.Helpers.LogSystem.LogEventArgs.html": {
    "href": "api/Anilibria.NET.Helpers.LogSystem.LogEventArgs.html",
    "title": "Class LogEventArgs | Anilibria.NET API",
    "keywords": "Class LogEventArgs Event data class with Log data Inheritance System.Object LogEventArgs Namespace : Anilibria.NET.Helpers.LogSystem Assembly : Anilibria.NET.dll Syntax public class LogEventArgs : EventArgs Properties Log Already formated log text Declaration public string Log { get; } Property Value Type Description System.String LogContent Raw log data Declaration public string LogContent { get; } Property Value Type Description System.String ReasonContext Log reason Declaration public LogReasonContext ReasonContext { get; } Property Value Type Description LogReasonContext Time Date of log creation Declaration public DateTime Time { get; } Property Value Type Description DateTime Type Log type Declaration public LogType Type { get; } Property Value Type Description LogType"
  },
  "api/Anilibria.NET.Helpers.LogSystem.Logger.html": {
    "href": "api/Anilibria.NET.Helpers.LogSystem.Logger.html",
    "title": "Class Logger | Anilibria.NET API",
    "keywords": "Class Logger Static class that is used to log what is happening in the library Inheritance System.Object Logger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Helpers.LogSystem Assembly : Anilibria.NET.dll Syntax public static class Logger Methods Log(String, LogReasonContext) Logging method for users of library. You can create a log and specify the reason ( LogReasonContext ) Declaration public static void Log(string text, LogReasonContext reasonContext) Parameters Type Name Description System.String text Text which will be logged LogReasonContext reasonContext Reason of log Events OnLog Log event handler Declaration public static event Logger.LogEventHandler OnLog Event Type Type Description Logger.LogEventHandler"
  },
  "api/Anilibria.NET.Helpers.LogSystem.Logger.LogEventHandler.html": {
    "href": "api/Anilibria.NET.Helpers.LogSystem.Logger.LogEventHandler.html",
    "title": "Delegate Logger.LogEventHandler | Anilibria.NET API",
    "keywords": "Delegate Logger.LogEventHandler Event Handler for logs Namespace : Anilibria.NET.Helpers.LogSystem Assembly : Anilibria.NET.dll Syntax public delegate void LogEventHandler(LogEventArgs args); Parameters Type Name Description LogEventArgs args Arguments for log"
  },
  "api/Anilibria.NET.Helpers.LogSystem.LogReasonContext.html": {
    "href": "api/Anilibria.NET.Helpers.LogSystem.LogReasonContext.html",
    "title": "Enum LogReasonContext | Anilibria.NET API",
    "keywords": "Enum LogReasonContext Type of reason why the log created Namespace : Anilibria.NET.Helpers.LogSystem Assembly : Anilibria.NET.dll Syntax public enum LogReasonContext Fields Name Description Error Reason was error Info Reason was ingotmation None There wasn`t any reason for log Warning Reason was warning"
  },
  "api/Anilibria.NET.Helpers.LogSystem.LogType.html": {
    "href": "api/Anilibria.NET.Helpers.LogSystem.LogType.html",
    "title": "Enum LogType | Anilibria.NET API",
    "keywords": "Enum LogType Type of log Namespace : Anilibria.NET.Helpers.LogSystem Assembly : Anilibria.NET.dll Syntax public enum LogType Fields Name Description AnilibriaClient Log from Anilibria client AnilibriaStaticClient Log from Anilibria static client Application Log from custom application JsonDeserializer Log from Json deserializer Subscriber Log rom subscriber"
  },
  "api/Anilibria.NET.Models.AnilibriaUser.html": {
    "href": "api/Anilibria.NET.Models.AnilibriaUser.html",
    "title": "Class AnilibriaUser | Anilibria.NET API",
    "keywords": "Class AnilibriaUser User Model Inheritance System.Object AnilibriaUser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models Assembly : Anilibria.NET.dll Syntax public class AnilibriaUser Properties Downloaded How many were downloaded via torrent Declaration [JsonProperty(\"downloaded\")] public ulong Downloaded { get; } Property Value Type Description System.UInt64 Uploaded How many were uploaded via torrent Declaration [JsonProperty(\"uploaded\")] public ulong Uploaded { get; } Property Value Type Description System.UInt64 UserName User name Declaration [JsonProperty(\"user\")] public string UserName { get; } Property Value Type Description System.String"
  },
  "api/Anilibria.NET.Models.CISDaysOfWeek.html": {
    "href": "api/Anilibria.NET.Models.CISDaysOfWeek.html",
    "title": "Enum CISDaysOfWeek | Anilibria.NET API",
    "keywords": "Enum CISDaysOfWeek Days of the week and their order in CIS Namespace : Anilibria.NET.Models Assembly : Anilibria.NET.dll Syntax public enum CISDaysOfWeek Fields Name Description Friday Monday Saturday Sunday Thursday Tuesday Wednesday"
  },
  "api/Anilibria.NET.Models.Feed.html": {
    "href": "api/Anilibria.NET.Models.Feed.html",
    "title": "Class Feed | Anilibria.NET API",
    "keywords": "Class Feed Website news feed Inheritance System.Object Feed Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models Assembly : Anilibria.NET.dll Syntax public class Feed Properties Title Title from feed Declaration [JsonProperty(\"Title\")] public Title Title { get; } Property Value Type Description Title YouTubePost Youtube post from feed Declaration [JsonProperty(\"youtube\")] public YouTubePost YouTubePost { get; } Property Value Type Description YouTubePost Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String YouTube post name or Title name in russian Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.GenresSortingType.html": {
    "href": "api/Anilibria.NET.Models.GenresSortingType.html",
    "title": "Enum GenresSortingType | Anilibria.NET API",
    "keywords": "Enum GenresSortingType Sorting received genres from AnilibriaAPI.GetGenresAsync(); Namespace : Anilibria.NET.Models Assembly : Anilibria.NET.dll Syntax public enum GenresSortingType Fields Name Description ByAlphabet Sorting by alphabet ByPopularity Sorting by popularity"
  },
  "api/Anilibria.NET.Models.html": {
    "href": "api/Anilibria.NET.Models.html",
    "title": "Namespace Anilibria.NET.Models | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models Classes AnilibriaUser User Model Feed Website news feed Schedule Title entry schedules for a specific day YouTubePost Post in YouTube from Anilibria Enums CISDaysOfWeek Days of the week and their order in CIS GenresSortingType Sorting received genres from AnilibriaAPI.GetGenresAsync();"
  },
  "api/Anilibria.NET.Models.Schedule.html": {
    "href": "api/Anilibria.NET.Models.Schedule.html",
    "title": "Class Schedule | Anilibria.NET API",
    "keywords": "Class Schedule Title entry schedules for a specific day Inheritance System.Object Schedule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models Assembly : Anilibria.NET.dll Syntax public class Schedule Properties Day Selected day as int Declaration [JsonProperty(\"day\")] public int Day { get; } Property Value Type Description System.Int32 DayOfWeek Selected day as enum Declaration public CISDaysOfWeek DayOfWeek { get; } Property Value Type Description CISDaysOfWeek Titles Titles coming out on the selected date Declaration [JsonProperty(\"list\")] public List<Title>? Titles { get; } Property Value Type Description System.Nullable < List < Title >> Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Selected day name Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.Configurations.BlockedConfiguration.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Configurations.BlockedConfiguration.html",
    "title": "Class BlockedConfiguration | Anilibria.NET API",
    "keywords": "Class BlockedConfiguration Information about blocking state in russia and www.wakanim.tv Inheritance System.Object BlockedConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.Configurations Assembly : Anilibria.NET.dll Syntax public class BlockedConfiguration Properties IsBlockedByWakanim Blocking state on www.wakanim.tv Declaration [JsonProperty(\"bakanim\")] public bool IsBlockedByWakanim { get; } Property Value Type Description System.Boolean IsBlockedInRussia Blocking state in Russia Declaration [JsonProperty(\"blocked\")] public bool IsBlockedInRussia { get; } Property Value Type Description System.Boolean Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String IsBlockedInRussia as System.String Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.Configurations.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Configurations.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.Configurations | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.Configurations Classes BlockedConfiguration Information about blocking state in russia and www.wakanim.tv NamesConfiguration Names configuration. Conteins russian, english and alternative names SeasonConfiguration Configuration of season StatusConfiguration Status configuration of Title TitleTypeConfiguration This class contains the type of the Title as well as the number of episodes in total in the title and length of episodes"
  },
  "api/Anilibria.NET.Models.TitleModel.Configurations.NamesConfiguration.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Configurations.NamesConfiguration.html",
    "title": "Class NamesConfiguration | Anilibria.NET API",
    "keywords": "Class NamesConfiguration Names configuration. Conteins russian, english and alternative names Inheritance System.Object NamesConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.Configurations Assembly : Anilibria.NET.dll Syntax public class NamesConfiguration Properties Alternative Title alternative name Declaration [JsonProperty(\"alternative\")] public string Alternative { get; } Property Value Type Description System.String English Title name in english Declaration [JsonProperty(\"en\")] public string English { get; } Property Value Type Description System.String Russian Title name in russian Declaration [JsonProperty(\"ru\")] public string Russian { get; } Property Value Type Description System.String Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Russian (name in russian) Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.Configurations.SeasonConfiguration.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Configurations.SeasonConfiguration.html",
    "title": "Class SeasonConfiguration | Anilibria.NET API",
    "keywords": "Class SeasonConfiguration Configuration of season Inheritance System.Object SeasonConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.Configurations Assembly : Anilibria.NET.dll Syntax public class SeasonConfiguration Properties Code Season as System.Int32 Declaration [JsonProperty(\"code\")] public int? Code { get; } Property Value Type Description System.Nullable < System.Int32 > DayOfWeek CISDaysOfWeek day on which the title was released Declaration public CISDaysOfWeek DayOfWeek { get; } Property Value Type Description CISDaysOfWeek Season Season of title Declaration public Season Season { get; } Property Value Type Description Season String Season as String in russian Declaration [JsonProperty(\"string\")] public string String { get; } Property Value Type Description System.String WeekDay Number of the day on which the title was released Declaration [JsonProperty(\"week_day\")] public int? WeekDay { get; } Property Value Type Description System.Nullable < System.Int32 > Year Year of title release day Declaration [JsonProperty(\"year\")] public int? Year { get; } Property Value Type Description System.Nullable < System.Int32 > Methods ToString() Override on .Tostring() Declaration public override string ToString() Returns Type Description System.String String Year DayOfWeek as System.String Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.Configurations.StatusConfiguration.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Configurations.StatusConfiguration.html",
    "title": "Class StatusConfiguration | Anilibria.NET API",
    "keywords": "Class StatusConfiguration Status configuration of Title Inheritance System.Object StatusConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.Configurations Assembly : Anilibria.NET.dll Syntax public class StatusConfiguration Properties Code TitleStatus as System.Int32 Declaration [JsonProperty(\"code\")] public int Code { get; } Property Value Type Description System.Int32 Status Title status Declaration public TitleStatus Status { get; } Property Value Type Description TitleStatus String TitleStatus as System.String in russian Declaration [JsonProperty(\"string\")] public string String { get; } Property Value Type Description System.String Methods ToString() Overrride on .ToString() Declaration public override string ToString() Returns Type Description System.String TitleStatus as String Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.Configurations.TitleTypeConfiguration.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Configurations.TitleTypeConfiguration.html",
    "title": "Class TitleTypeConfiguration | Anilibria.NET API",
    "keywords": "Class TitleTypeConfiguration This class contains the type of the Title as well as the number of episodes in total in the title and length of episodes Inheritance System.Object TitleTypeConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.Configurations Assembly : Anilibria.NET.dll Syntax public class TitleTypeConfiguration Properties Code TitleType as System.Int32 Declaration [JsonProperty(\"code\")] public int? Code { get; } Property Value Type Description System.Nullable < System.Int32 > FullTypeString TitleType as string with Series Declaration [JsonProperty(\"full_string\")] public string FullTypeString { get; } Property Value Type Description System.String Length Length of episodes as System.String in minutes Declaration [JsonProperty(\"length\")] public int? Length { get; } Property Value Type Description System.Nullable < System.Int32 > Series Total number or series Declaration [JsonProperty(\"series\")] public int? Series { get; } Property Value Type Description System.Nullable < System.Int32 > Type Type of Title Declaration public TitleType Type { get; } Property Value Type Description TitleType TypeString TitleType as System.String Declaration [JsonProperty(\"string\")] public string TypeString { get; } Property Value Type Description System.String Methods ToString() Override on .Tostring() Declaration public override string ToString() Returns Type Description System.String FullTypeString Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel Classes Team The team that worked on the title Title Translated title from anilibtia.tv! You can get all information about the title, like: names, posters, episodes, torrent files ect. Reed docs to see more Enums Season Season of title TitleStatus Status of title TitleType Type of title"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.Episode.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.Episode.html",
    "title": "Class Episode | Anilibria.NET API",
    "keywords": "Class Episode This class contains information about the episode number ( Number ), a preview message from the voiceover team ( Preview ), values for opening and ending skips ( Skips ), links to .m3y8 files ( HotLinks ), and the release time of the title ( CreatedDate ). Inheritance System.Object Episode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel Assembly : Anilibria.NET.dll Syntax public class Episode Properties CreatedDate Release date of episode Declaration [JsonProperty(\"created_timestamp\")] [JsonConverter(typeof(UnixDateTimeConverter))] public DateTime CreatedDate { get; } Property Value Type Description DateTime HotLinks Hot links to .m3u8 files without host link (short version) Declaration [JsonProperty(\"hls\")] public HotLinks HotLinks { get; } Property Value Type Description HotLinks Number Episode number in Title Declaration [JsonProperty(\"serie\")] public string Number { get; } Property Value Type Description System.String Preview Message from voiceover team Declaration [JsonProperty(\"preview\")] public string Preview { get; } Property Value Type Description System.String Skips Information about skips in episode Declaration [JsonProperty(\"skips\")] public Skips Skips { get; } Property Value Type Description Skips Methods ToString() Override of .ToString() Declaration public override string ToString() Returns Type Description System.String Serie Number as System.String Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.HotLinks.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.HotLinks.html",
    "title": "Class HotLinks | Anilibria.NET API",
    "keywords": "Class HotLinks This class is needed to get short links to .m3u8 files without a host. Use HostLink to build full link to the file Inheritance System.Object HotLinks Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel Assembly : Anilibria.NET.dll Syntax public class HotLinks Properties FullHD_m3u8 Link to the FullHD .m3u8 file Declaration [JsonProperty(\"fhd\")] public string FullHD_m3u8 { get; } Property Value Type Description System.String Link as System.String HD_m3u8 Link to the HD .m3u8 file Declaration [JsonProperty(\"hd\")] public string HD_m3u8 { get; } Property Value Type Description System.String Link as System.String SD_m3u8 Link to the SD .m3u8 file Declaration [JsonProperty(\"sd\")] public string SD_m3u8 { get; } Property Value Type Description System.String Link as System.String"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel Classes Episode This class contains information about the episode number ( Number ), a preview message from the voiceover team ( Preview ), values for opening and ending skips ( Skips ), links to .m3y8 files ( HotLinks ), and the release time of the title ( CreatedDate ). HotLinks This class is needed to get short links to .m3u8 files without a host. Use HostLink to build full link to the file Skips Contains information about the beginnings and ends of the opening and ending"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.Skips.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel.Skips.html",
    "title": "Class Skips | Anilibria.NET API",
    "keywords": "Class Skips Contains information about the beginnings and ends of the opening and ending Inheritance System.Object Skips Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.PlayerModel.EpisodeModel Assembly : Anilibria.NET.dll Syntax public class Skips Properties EndingTimecodes Ending start and end positions im miliseconds Declaration [JsonProperty(\"ending\")] public List<int>? EndingTimecodes { get; } Property Value Type Description System.Nullable < List < System.Int32 >> [0] - start of ending, [1] - end of ending OpeningTimecodes Opening start and end positions im miliseconds Declaration [JsonProperty(\"opening\")] public List<int>? OpeningTimecodes { get; } Property Value Type Description System.Nullable < List < System.Int32 >> [0] - start of opening, [1] - end of opening Methods ToString() Override on .Tostring() Declaration public override string ToString() Returns Type Description System.String System.String in format \" OpeningTimecodes | EndingTimecodes \" Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.PlayerModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.PlayerModel Classes Player This class allows you to get a list of Episode s of this title, as well as a link to the server where the title is loaded ( HostLink or AlternativePlayerLink ), information about its series ( Series ) Series Class containing information about the series of the title"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.Player.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.Player.html",
    "title": "Class Player | Anilibria.NET API",
    "keywords": "Class Player This class allows you to get a list of Episode s of this title, as well as a link to the server where the title is loaded ( HostLink or AlternativePlayerLink ), information about its series ( Series ) Inheritance System.Object Player Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.PlayerModel Assembly : Anilibria.NET.dll Syntax public class Player Properties AlternativePlayerLink Link to alternative player Declaration [JsonProperty(\"alternative_player\")] public string AlternativePlayerLink { get; } Property Value Type Description System.String Episodes List of Episode s. Here you can get information about each episode Declaration [JsonProperty(\"playlist\")] public List<Episode>? Episodes { get; } Property Value Type Description System.Nullable < List < Episode >> HostLink Link to one of the anilibria`s serves. Use it ti build full link to .m3u8 file (example: HostLink + FullHD_m3u8 ) Declaration [JsonProperty(\"host\")] public string HostLink { get; } Property Value Type Description System.String Series Information about episodes Declaration [JsonProperty(\"series\")] public Series Series { get; } Property Value Type Description Series Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String HostLink Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.PlayerModel.Series.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PlayerModel.Series.html",
    "title": "Class Series | Anilibria.NET API",
    "keywords": "Class Series Class containing information about the series of the title Inheritance System.Object Series Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.PlayerModel Assembly : Anilibria.NET.dll Syntax public class Series Properties First From what series is available for watch Declaration [JsonProperty(\"first\")] public int First { get; } Property Value Type Description System.Int32 Last Latest episode available for viewing Declaration [JsonProperty(\"last\")] public int Last { get; } Property Value Type Description System.Int32 String Formated string in format First-Last (example: 1-24) Declaration [JsonProperty(\"string\")] public string String { get; } Property Value Type Description System.String Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String String Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.PostersModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PostersModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.PostersModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.PostersModel Classes Poster Class containing a short link to the poster without a link to the site, a raw base64 poster string and an image converted from a raw base64 string Posters Class containing small, medium and original Poster s for the title"
  },
  "api/Anilibria.NET.Models.TitleModel.PostersModel.Poster.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PostersModel.Poster.html",
    "title": "Class Poster | Anilibria.NET API",
    "keywords": "Class Poster Class containing a short link to the poster without a link to the site, a raw base64 poster string and an image converted from a raw base64 string Inheritance System.Object Poster Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.PostersModel Assembly : Anilibria.NET.dll Syntax public class Poster Properties Base64 Raw base64 string of poster. Convert it to get image as System.Byte array Declaration [JsonProperty(\"raw_base64_file\")] public string Base64 { get; } Property Value Type Description System.String Image Image as System.Byte array Declaration public byte[] Image { get; } Property Value Type Description System.Byte [] Url Link to the poster without a link to the site Declaration [JsonProperty(\"url\")] public string Url { get; } Property Value Type Description System.String Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Short poster image url Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.PostersModel.Posters.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.PostersModel.Posters.html",
    "title": "Class Posters | Anilibria.NET API",
    "keywords": "Class Posters Class containing small, medium and original Poster s for the title Inheritance System.Object Posters Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel.PostersModel Assembly : Anilibria.NET.dll Syntax public class Posters Properties Medium Medium size poster Declaration [JsonProperty(\"medium\")] public Poster Medium { get; } Property Value Type Description Poster Original Original size poster Declaration [JsonProperty(\"original\")] public Poster Original { get; } Property Value Type Description Poster Small Small size poster Declaration [JsonProperty(\"small\")] public Poster Small { get; } Property Value Type Description Poster"
  },
  "api/Anilibria.NET.Models.TitleModel.Season.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Season.html",
    "title": "Enum Season | Anilibria.NET API",
    "keywords": "Enum Season Season of title Namespace : Anilibria.NET.Models.TitleModel Assembly : Anilibria.NET.dll Syntax public enum Season Fields Name Description Autumn Spring Summer Winter"
  },
  "api/Anilibria.NET.Models.TitleModel.Team.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Team.html",
    "title": "Class Team | Anilibria.NET API",
    "keywords": "Class Team The team that worked on the title Inheritance System.Object Team Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel Assembly : Anilibria.NET.dll Syntax public class Team Properties Count Team members count Declaration public int Count { get; } Property Value Type Description System.Int32 Decors People who decor the title Declaration [JsonProperty(\"decor\")] public List<string>? Decors { get; } Property Value Type Description System.Nullable < List < System.String >> Editors People who etid the title Declaration [JsonProperty(\"editing\")] public List<string>? Editors { get; } Property Value Type Description System.Nullable < List < System.String >> Timings People who made timings for the title Declaration [JsonProperty(\"timing\")] public List<string>? Timings { get; } Property Value Type Description System.Nullable < List < System.String >> Translators People who translated the title Declaration [JsonProperty(\"translator\")] public List<string>? Translators { get; } Property Value Type Description System.Nullable < List < System.String >> Voicers People who voiced the title Declaration [JsonProperty(\"voice\")] public List<string>? Voicers { get; } Property Value Type Description System.Nullable < List < System.String >>"
  },
  "api/Anilibria.NET.Models.TitleModel.Title.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.Title.html",
    "title": "Class Title | Anilibria.NET API",
    "keywords": "Class Title Translated title from anilibtia.tv! You can get all information about the title, like: names, posters, episodes, torrent files ect. Reed docs to see more Inheritance System.Object Title Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel Assembly : Anilibria.NET.dll Syntax public class Title Properties Announce Message from anilibira team for this title Declaration [JsonProperty(\"announce\")] public string Announce { get; } Property Value Type Description System.String BlockedConfiguration Blocking state configuration of title Declaration [JsonProperty(\"blocked\")] public BlockedConfiguration BlockedConfiguration { get; } Property Value Type Description BlockedConfiguration Code Title code, used to create a link Declaration [JsonProperty(\"code\")] public string Code { get; } Property Value Type Description System.String Description Title description Declaration [JsonProperty(\"description\")] public string Description { get; } Property Value Type Description System.String Genres List of genres Declaration [JsonProperty(\"genres\")] public List<string>? Genres { get; } Property Value Type Description System.Nullable < List < System.String >> Id Title ID Declaration [JsonProperty(\"id\")] public int Id { get; } Property Value Type Description System.Int32 InFavorites The number of users who added the title to favorites Declaration [JsonProperty(\"in_favorites\")] public string InFavorites { get; } Property Value Type Description System.String IsBlockedInRussia State of title blocking in russia Declaration public bool IsBlockedInRussia { get; } Property Value Type Description System.Boolean LastChangeDate Last change date Declaration [JsonProperty(\"last_change\")] [JsonConverter(typeof(UnixDateTimeConverter))] public DateTime? LastChangeDate { get; } Property Value Type Description System.Nullable < DateTime > Name Name of title in russian Declaration public string Name { get; } Property Value Type Description System.String NamesConfiguration Configuration of title name in different languages Declaration [JsonProperty(\"names\")] public NamesConfiguration NamesConfiguration { get; } Property Value Type Description NamesConfiguration Season Title season Declaration public Season Season { get; } Property Value Type Description Season SeasonConfiguration Configuration of title season Declaration [JsonProperty(\"season\")] public SeasonConfiguration SeasonConfiguration { get; } Property Value Type Description SeasonConfiguration Status Title status Declaration public TitleStatus Status { get; } Property Value Type Description TitleStatus StatusConfiguration Configuration of title status Declaration [JsonProperty(\"status\")] public StatusConfiguration StatusConfiguration { get; } Property Value Type Description StatusConfiguration Team The team that worked on the title Declaration [JsonProperty(\"team\")] public Team Team { get; } Property Value Type Description Team TitleTypeConfiguration Configuration of title type Declaration [JsonProperty(\"type\")] public TitleTypeConfiguration TitleTypeConfiguration { get; } Property Value Type Description TitleTypeConfiguration Type Type of title Declaration public TitleType Type { get; } Property Value Type Description TitleType UdatedDate Last update date Declaration [JsonProperty(\"updated\")] [JsonConverter(typeof(UnixDateTimeConverter))] public DateTime? UdatedDate { get; } Property Value Type Description System.Nullable < DateTime > Methods GetPlayerAsync() Getting the title player Declaration public async Task<Player> GetPlayerAsync() Returns Type Description Task < Player > Player of title GetPostersAsync(Boolean) Getting title posters Declaration public async Task<Posters> GetPostersAsync(bool downloadBase64) Parameters Type Name Description System.Boolean downloadBase64 if true, posters will be downloaded with raw base64 image Returns Type Description Task < Posters > GetTorrentAsync(Boolean, Boolean) Getting the title torrent files Declaration public async Task<Torrent> GetTorrentAsync(bool downloadMetadate, bool downloadBase64) Parameters Type Name Description System.Boolean downloadMetadate if true: download metadata of files System.Boolean downloadBase64 if true: download raw base64 torrent files Returns Type Description Task < Torrent > ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Title code Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.TitleModel.TitleStatus.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TitleStatus.html",
    "title": "Enum TitleStatus | Anilibria.NET API",
    "keywords": "Enum TitleStatus Status of title Namespace : Anilibria.NET.Models.TitleModel Assembly : Anilibria.NET.dll Syntax public enum TitleStatus Fields Name Description Done Hidden InProgress NotTheOngoing"
  },
  "api/Anilibria.NET.Models.TitleModel.TitleType.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TitleType.html",
    "title": "Enum TitleType | Anilibria.NET API",
    "keywords": "Enum TitleType Type of title Namespace : Anilibria.NET.Models.TitleModel Assembly : Anilibria.NET.dll Syntax public enum TitleType Fields Name Description Movie ONA OVA Special TV"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.TorrentsModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.TorrentsModel Classes Torrent Torrent configuration. Conteins Series and TorrentFile s"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.Torrent.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.Torrent.html",
    "title": "Class Torrent | Anilibria.NET API",
    "keywords": "Class Torrent Torrent configuration. Conteins Series and TorrentFile s Inheritance System.Object Torrent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel.TorrentsModel Assembly : Anilibria.NET.dll Syntax public class Torrent Properties Files List of torrent files Declaration [JsonProperty(\"list\")] public List<TorrentFile>? Files { get; } Property Value Type Description System.Nullable < List < TorrentFile >> Series Series in torrnet files Declaration [JsonProperty(\"series\")] public Series Series { get; } Property Value Type Description Series"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel Classes TorrentFile Torrent file info and data class, u can get raw base64 string of torrent file and see file metadata TorrentQuality Information about video quality from TorrentFile"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFile.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFile.html",
    "title": "Class TorrentFile | Anilibria.NET API",
    "keywords": "Class TorrentFile Torrent file info and data class, u can get raw base64 string of torrent file and see file metadata Inheritance System.Object TorrentFile Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel Assembly : Anilibria.NET.dll Syntax public class TorrentFile Properties Base64 Raw base64 string of torrent file. You can convert it to get .torrent file Declaration [JsonProperty(\"raw_base64_file\")] public string Base64 { get; } Property Value Type Description System.String Downloads Downloads count of current torrent file Declaration [JsonProperty(\"downloads\")] public ulong Downloads { get; } Property Value Type Description System.UInt64 Hash Current torrent file hash Declaration [JsonProperty(\"hash\")] public string Hash { get; } Property Value Type Description System.String Id Torrent id in anilibria.tv Declaration [JsonProperty(\"torrent_id\")] public int Id { get; } Property Value Type Description System.Int32 Leechers Leechers count of cerrent torrent file Declaration [JsonProperty(\"leechers\")] public int Leechers { get; } Property Value Type Description System.Int32 Metadate Current torrent file metadate ( TorrenetMetadate ) Declaration [JsonProperty(\"metadata\")] public TorrenetMetadate Metadate { get; } Property Value Type Description TorrenetMetadate Quality Torrent and video quality information Declaration [JsonProperty(\"quality\")] public TorrentQuality Quality { get; } Property Value Type Description TorrentQuality RawUrl Raw url to torrent file Declaration [JsonProperty(\"url\")] public string RawUrl { get; } Property Value Type Description System.String Seeders Seeders count of currrent torrent file Declaration [JsonProperty(\"seeders\")] public int Seeders { get; } Property Value Type Description System.Int32 Series Information about series of Title Declaration [JsonProperty(\"series\")] public Series Series { get; } Property Value Type Description Series Size Size in System.Byte s of current torrent file Declaration [JsonProperty(\"total_size\")] public ulong Size { get; } Property Value Type Description System.UInt64 UploadedDate Date of uploading the torrent file to the site Declaration [JsonProperty(\"uploaded_timestamp\")] [JsonConverter(typeof(UnixDateTimeConverter))] public DateTime? UploadedDate { get; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel.html",
    "title": "Namespace Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel Classes MetadateFile Torrent file metadata, contains information about the file name, size, and offset TorrenetMetadate Torrent metadete configuration"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel.MetadateFile.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel.MetadateFile.html",
    "title": "Class MetadateFile | Anilibria.NET API",
    "keywords": "Class MetadateFile Torrent file metadata, contains information about the file name, size, and offset Inheritance System.Object MetadateFile Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel Assembly : Anilibria.NET.dll Syntax public class MetadateFile Properties FileName File name Declaration [JsonProperty(\"file\")] public string FileName { get; } Property Value Type Description System.String FileOffset File offset Declaration [JsonProperty(\"offset\")] public ulong FileOffset { get; } Property Value Type Description System.UInt64 FileSize File size Declaration [JsonProperty(\"size\")] public ulong FileSize { get; } Property Value Type Description System.UInt64"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel.TorrenetMetadate.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel.TorrenetMetadate.html",
    "title": "Class TorrenetMetadate | Anilibria.NET API",
    "keywords": "Class TorrenetMetadate Torrent metadete configuration Inheritance System.Object TorrenetMetadate Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentFileMetadataModel Assembly : Anilibria.NET.dll Syntax public class TorrenetMetadate Properties Announce An array of strings containing a list of trackers Declaration [JsonProperty(\"announce\")] public string[] Announce { get; } Property Value Type Description System.String [] CreatedDate Torrent creation time Declaration [JsonProperty(\"created_timestamp\")] [JsonConverter(typeof(UnixDateTimeConverter))] public DateTime CreatedDate { get; } Property Value Type Description DateTime Hash Torrent file hash string Declaration [JsonProperty(\"hash\")] public string Hash { get; } Property Value Type Description System.String MetadateFiles An array of MetadateFile s containing a list of files in the torrent Declaration [JsonProperty(\"files_list\")] public List<MetadateFile>? MetadateFiles { get; } Property Value Type Description System.Nullable < List < MetadateFile >> Name Torrent file name Declaration [JsonProperty(\"name\")] public string Name { get; } Property Value Type Description System.String"
  },
  "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentQuality.html": {
    "href": "api/Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel.TorrentQuality.html",
    "title": "Class TorrentQuality | Anilibria.NET API",
    "keywords": "Class TorrentQuality Information about video quality from TorrentFile Inheritance System.Object TorrentQuality Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models.TitleModel.TorrentsModel.TorrentFileModel Assembly : Anilibria.NET.dll Syntax public class TorrentQuality Properties EncoderString Encoder name as string Declaration [JsonProperty(\"encoder\")] public string EncoderString { get; } Property Value Type Description System.String FullString Full format name as string Declaration [JsonProperty(\"string\")] public string FullString { get; } Property Value Type Description System.String LqAudio Low-quality audio bool Declaration [JsonProperty(\"lq_audio\")] public object LqAudio { get; } Property Value Type Description System.Object ResolutionString Video resolution as string Declaration [JsonProperty(\"resolution\")] public string ResolutionString { get; } Property Value Type Description System.String VideoFormatString Video name fotmat as string Declaration [JsonProperty(\"type\")] public string VideoFormatString { get; } Property Value Type Description System.String Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Full format name as string Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.Models.YouTubePost.html": {
    "href": "api/Anilibria.NET.Models.YouTubePost.html",
    "title": "Class YouTubePost | Anilibria.NET API",
    "keywords": "Class YouTubePost Post in YouTube from Anilibria Inheritance System.Object YouTubePost Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Anilibria.NET.Models Assembly : Anilibria.NET.dll Syntax public class YouTubePost Properties Comments Count of comment on post Declaration [JsonProperty(\"comments\")] public int? Comments { get; } Property Value Type Description System.Nullable < System.Int32 > Id ID of post Declaration [JsonProperty(\"id\")] public int? Id { get; } Property Value Type Description System.Nullable < System.Int32 > ImageUrl Url to img on youtube images Declaration [JsonProperty(\"image\")] public string ImageUrl { get; } Property Value Type Description System.String Name Name of post Declaration [JsonProperty(\"title\")] public string Name { get; } Property Value Type Description System.String Release Post creation date Declaration [JsonProperty(\"timestamp\")] [JsonConverter(typeof(UnixDateTimeConverter))] public DateTime Release { get; } Property Value Type Description DateTime Views Views on post Declaration [JsonProperty(\"views\")] public int? Views { get; } Property Value Type Description System.Nullable < System.Int32 > YoutubeId Id on youtube.com Declaration [JsonProperty(\"youtube_id\")] public string YoutubeId { get; } Property Value Type Description System.String Methods ToString() Override on .ToString() Declaration public override string ToString() Returns Type Description System.String Name of post Overrides System.Object.ToString()"
  },
  "api/Anilibria.NET.SubscribingSystem.html": {
    "href": "api/Anilibria.NET.SubscribingSystem.html",
    "title": "Namespace Anilibria.NET.SubscribingSystem | Anilibria.NET API",
    "keywords": "Namespace Anilibria.NET.SubscribingSystem Classes Subscriber This class is needed in order to subscribe to titles via websocket TitleRecievedEventArgs Arguments that you will receive after subscribing through the Subscriber class Delegates Subscriber.TitleRecievedEventHandler Title get handler"
  },
  "api/Anilibria.NET.SubscribingSystem.Subscriber.html": {
    "href": "api/Anilibria.NET.SubscribingSystem.Subscriber.html",
    "title": "Class Subscriber | Anilibria.NET API",
    "keywords": "Class Subscriber This class is needed in order to subscribe to titles via websocket Inheritance System.Object Subscriber Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Anilibria.NET.SubscribingSystem Assembly : Anilibria.NET.dll Syntax public class Subscriber Constructors Subscriber() This class is needed in order to subscribe to titles Declaration public Subscriber() Properties SubscribedGenres Genres to which the client is subscribed Declaration public List<string> SubscribedGenres { get; } Property Value Type Description List < System.String > SubscribedTitles Titles to which the client is subscribed Declaration public List<Title> SubscribedTitles { get; } Property Value Type Description List < Title > Methods SubscribeOnGenres(String[]) Subscription on titles with specific genres Declaration public async void SubscribeOnGenres(string[] genres) Parameters Type Name Description System.String [] genres The title to which the subscription will be made SubscribeOnNew() Subscription on new titles for this year Declaration public async void SubscribeOnNew() SubscribeOnTitiles(Title[]) Titles subscription Declaration public void SubscribeOnTitiles(Title[] titles) Parameters Type Name Description Title [] titles The titles to which the subscription will be made SubscribeOnTitle(Title) Title subscription Declaration public async void SubscribeOnTitle(Title title) Parameters Type Name Description Title title The title to which the subscription will be made Events OnTitleRecieved An event that is called when a title update is received Declaration public event Subscriber.TitleRecievedEventHandler OnTitleRecieved Event Type Type Description Subscriber.TitleRecievedEventHandler"
  },
  "api/Anilibria.NET.SubscribingSystem.Subscriber.TitleRecievedEventHandler.html": {
    "href": "api/Anilibria.NET.SubscribingSystem.Subscriber.TitleRecievedEventHandler.html",
    "title": "Delegate Subscriber.TitleRecievedEventHandler | Anilibria.NET API",
    "keywords": "Delegate Subscriber.TitleRecievedEventHandler Title get handler Namespace : Anilibria.NET.SubscribingSystem Assembly : Anilibria.NET.dll Syntax public delegate void TitleRecievedEventHandler(object sender, TitleRecievedEventArgs e); Parameters Type Name Description System.Object sender The object that was notified when updating the title subscription TitleRecievedEventArgs e Arguments received during notification"
  },
  "api/Anilibria.NET.SubscribingSystem.TitleRecievedEventArgs.html": {
    "href": "api/Anilibria.NET.SubscribingSystem.TitleRecievedEventArgs.html",
    "title": "Class TitleRecievedEventArgs | Anilibria.NET API",
    "keywords": "Class TitleRecievedEventArgs Arguments that you will receive after subscribing through the Subscriber class Inheritance System.Object TitleRecievedEventArgs Namespace : Anilibria.NET.SubscribingSystem Assembly : Anilibria.NET.dll Syntax public class TitleRecievedEventArgs : EventArgs Constructors TitleRecievedEventArgs(Title) Arguments that you will receive after subscribing through the Subscriber class Declaration public TitleRecievedEventArgs(Title title) Parameters Type Name Description Title title Title to save Properties Title Title in args Declaration public Title Title { get; } Property Value Type Description Title"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Anilibria.NET API",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Anilibria.NET API",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Anilibria.NET API",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}